"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/settings/page",{

/***/ "(app-pages-browser)/./src/lib/api/adminSettings.ts":
/*!**************************************!*\
  !*** ./src/lib/api/adminSettings.ts ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAdminSettings: function() { return /* binding */ getAdminSettings; },\n/* harmony export */   updateAdminSettings: function() { return /* binding */ updateAdminSettings; }\n/* harmony export */ });\nconst API_URL = \"http://localhost:3000\" || 0;\nasync function getAdminSettings() {\n    const response = await fetch(\"/api/admin/settings\");\n    if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || \"설정을 불러오는데 실패했습니다.\");\n    }\n    return response.json();\n}\nasync function updateAdminSettings(settings) {\n    const response = await fetch(\"/api/admin/settings\", {\n        method: \"PUT\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(settings)\n    });\n    if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || \"설정 업데이트에 실패했습니다.\");\n    }\n    return response.json();\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvYXBpL2FkbWluU2V0dGluZ3MudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNQSxVQUFVQyx1QkFBK0IsSUFBSTtBQXdCNUMsZUFBZUc7SUFDbEIsTUFBTUMsV0FBVyxNQUFNQyxNQUFNO0lBQzdCLElBQUksQ0FBQ0QsU0FBU0UsRUFBRSxFQUFFO1FBQ2QsTUFBTUMsUUFBUSxNQUFNSCxTQUFTSSxJQUFJO1FBQ2pDLE1BQU0sSUFBSUMsTUFBTUYsTUFBTUcsT0FBTyxJQUFJO0lBQ3JDO0lBQ0EsT0FBT04sU0FBU0ksSUFBSTtBQUN4QjtBQUVPLGVBQWVHLG9CQUFvQkMsUUFBdUI7SUFDN0QsTUFBTVIsV0FBVyxNQUFNQyxNQUFNLHVCQUF1QjtRQUNoRFEsUUFBUTtRQUNSQyxTQUFTO1lBQ0wsZ0JBQWdCO1FBQ3BCO1FBQ0FDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQ0w7SUFDekI7SUFFQSxJQUFJLENBQUNSLFNBQVNFLEVBQUUsRUFBRTtRQUNkLE1BQU1DLFFBQVEsTUFBTUgsU0FBU0ksSUFBSTtRQUNqQyxNQUFNLElBQUlDLE1BQU1GLE1BQU1HLE9BQU8sSUFBSTtJQUNyQztJQUVBLE9BQU9OLFNBQVNJLElBQUk7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2xpYi9hcGkvYWRtaW5TZXR0aW5ncy50cz9mODUwIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEFQSV9VUkwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BUElfVVJMIHx8ICdodHRwOi8vbG9jYWxob3N0OjMwMDEvYXBpJztcclxuXHJcbmludGVyZmFjZSBBZG1pblNldHRpbmdzIHtcclxuICAgIHNpdGVfbmFtZTogc3RyaW5nO1xyXG4gICAgc2l0ZV9kZXNjcmlwdGlvbjogc3RyaW5nO1xyXG4gICAgY29udGFjdF9lbWFpbDogc3RyaW5nO1xyXG4gICAgbm90aWZpY2F0aW9uX3NldHRpbmdzOiB7XHJcbiAgICAgICAgZW1haWxfbm90aWZpY2F0aW9uczogYm9vbGVhbjtcclxuICAgICAgICBhcHBsaWNhdGlvbl9ub3RpZmljYXRpb25zOiBib29sZWFuO1xyXG4gICAgICAgIGNhbXBhaWduX25vdGlmaWNhdGlvbnM6IGJvb2xlYW47XHJcbiAgICB9O1xyXG4gICAgY2FtcGFpZ25fc2V0dGluZ3M6IHtcclxuICAgICAgICBhdXRvX2FwcHJvdmVfY2FtcGFpZ25zOiBib29sZWFuO1xyXG4gICAgICAgIGRlZmF1bHRfY2FtcGFpZ25fc3RhdHVzOiAnZHJhZnQnIHwgJ2FjdGl2ZSc7XHJcbiAgICAgICAgbWluaW11bV9yZXdhcmRfYW1vdW50OiBudW1iZXI7XHJcbiAgICAgICAgbWF4aW11bV9yZXdhcmRfYW1vdW50OiBudW1iZXI7XHJcbiAgICB9O1xyXG4gICAgc2VjdXJpdHlfc2V0dGluZ3M6IHtcclxuICAgICAgICByZXF1aXJlX2VtYWlsX3ZlcmlmaWNhdGlvbjogYm9vbGVhbjtcclxuICAgICAgICBhbGxvd19zb2NpYWxfbG9naW46IGJvb2xlYW47XHJcbiAgICAgICAgc2Vzc2lvbl90aW1lb3V0X21pbnV0ZXM6IG51bWJlcjtcclxuICAgIH07XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRBZG1pblNldHRpbmdzKCk6IFByb21pc2U8QWRtaW5TZXR0aW5ncz4ge1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS9hZG1pbi9zZXR0aW5ncycpO1xyXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICAgIGNvbnN0IGVycm9yID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvci5tZXNzYWdlIHx8ICfshKTsoJXsnYQg67aI65+s7Jik64qU642wIOyLpO2MqO2WiOyKteuLiOuLpC4nKTtcclxuICAgIH1cclxuICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cGRhdGVBZG1pblNldHRpbmdzKHNldHRpbmdzOiBBZG1pblNldHRpbmdzKTogUHJvbWlzZTxBZG1pblNldHRpbmdzPiB7XHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL2FkbWluL3NldHRpbmdzJywge1xyXG4gICAgICAgIG1ldGhvZDogJ1BVVCcsXHJcbiAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoc2V0dGluZ3MpLFxyXG4gICAgfSk7XHJcblxyXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICAgIGNvbnN0IGVycm9yID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvci5tZXNzYWdlIHx8ICfshKTsoJUg7JeF642w7J207Yq47JeQIOyLpO2MqO2WiOyKteuLiOuLpC4nKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xyXG59ICJdLCJuYW1lcyI6WyJBUElfVVJMIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0FQSV9VUkwiLCJnZXRBZG1pblNldHRpbmdzIiwicmVzcG9uc2UiLCJmZXRjaCIsIm9rIiwiZXJyb3IiLCJqc29uIiwiRXJyb3IiLCJtZXNzYWdlIiwidXBkYXRlQWRtaW5TZXR0aW5ncyIsInNldHRpbmdzIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api/adminSettings.ts\n"));

/***/ })

});