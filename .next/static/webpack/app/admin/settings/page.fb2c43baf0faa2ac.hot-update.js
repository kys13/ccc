"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/settings/page",{

/***/ "(app-pages-browser)/./src/lib/api/adminSettings.ts":
/*!**************************************!*\
  !*** ./src/lib/api/adminSettings.ts ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAdminSettings: function() { return /* binding */ getAdminSettings; },\n/* harmony export */   updateAdminSettings: function() { return /* binding */ updateAdminSettings; }\n/* harmony export */ });\nconst API_URL = \"http://localhost:3000\" || 0;\nasync function getAdminSettings() {\n    const response = await fetch(\"/api/admin/settings\");\n    if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || \"설정을 불러오는데 실패했습니다.\");\n    }\n    const result = await response.json();\n    return result.data || result;\n}\nasync function updateAdminSettings(settings) {\n    const response = await fetch(\"/api/admin/settings\", {\n        method: \"PUT\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(settings)\n    });\n    if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || \"설정 업데이트에 실패했습니다.\");\n    }\n    return response.json();\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvYXBpL2FkbWluU2V0dGluZ3MudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNQSxVQUFVQyx1QkFBK0IsSUFBSTtBQXdCNUMsZUFBZUc7SUFDbEIsTUFBTUMsV0FBVyxNQUFNQyxNQUFNO0lBQzdCLElBQUksQ0FBQ0QsU0FBU0UsRUFBRSxFQUFFO1FBQ2QsTUFBTUMsUUFBUSxNQUFNSCxTQUFTSSxJQUFJO1FBQ2pDLE1BQU0sSUFBSUMsTUFBTUYsTUFBTUcsT0FBTyxJQUFJO0lBQ3JDO0lBQ0EsTUFBTUMsU0FBUyxNQUFNUCxTQUFTSSxJQUFJO0lBQ2xDLE9BQU9HLE9BQU9DLElBQUksSUFBSUQ7QUFDMUI7QUFFTyxlQUFlRSxvQkFBb0JDLFFBQXVCO0lBQzdELE1BQU1WLFdBQVcsTUFBTUMsTUFBTSx1QkFBdUI7UUFDaERVLFFBQVE7UUFDUkMsU0FBUztZQUNMLGdCQUFnQjtRQUNwQjtRQUNBQyxNQUFNQyxLQUFLQyxTQUFTLENBQUNMO0lBQ3pCO0lBRUEsSUFBSSxDQUFDVixTQUFTRSxFQUFFLEVBQUU7UUFDZCxNQUFNQyxRQUFRLE1BQU1ILFNBQVNJLElBQUk7UUFDakMsTUFBTSxJQUFJQyxNQUFNRixNQUFNRyxPQUFPLElBQUk7SUFDckM7SUFFQSxPQUFPTixTQUFTSSxJQUFJO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9saWIvYXBpL2FkbWluU2V0dGluZ3MudHM/Zjg1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBBUElfVVJMID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVBJX1VSTCB8fCAnaHR0cDovL2xvY2FsaG9zdDozMDAxL2FwaSc7XHJcblxyXG5pbnRlcmZhY2UgQWRtaW5TZXR0aW5ncyB7XHJcbiAgICBzaXRlX25hbWU6IHN0cmluZztcclxuICAgIHNpdGVfZGVzY3JpcHRpb246IHN0cmluZztcclxuICAgIGNvbnRhY3RfZW1haWw6IHN0cmluZztcclxuICAgIG5vdGlmaWNhdGlvbl9zZXR0aW5nczoge1xyXG4gICAgICAgIGVtYWlsX25vdGlmaWNhdGlvbnM6IGJvb2xlYW47XHJcbiAgICAgICAgYXBwbGljYXRpb25fbm90aWZpY2F0aW9uczogYm9vbGVhbjtcclxuICAgICAgICBjYW1wYWlnbl9ub3RpZmljYXRpb25zOiBib29sZWFuO1xyXG4gICAgfTtcclxuICAgIGNhbXBhaWduX3NldHRpbmdzOiB7XHJcbiAgICAgICAgYXV0b19hcHByb3ZlX2NhbXBhaWduczogYm9vbGVhbjtcclxuICAgICAgICBkZWZhdWx0X2NhbXBhaWduX3N0YXR1czogJ2RyYWZ0JyB8ICdhY3RpdmUnO1xyXG4gICAgICAgIG1pbmltdW1fcmV3YXJkX2Ftb3VudDogbnVtYmVyO1xyXG4gICAgICAgIG1heGltdW1fcmV3YXJkX2Ftb3VudDogbnVtYmVyO1xyXG4gICAgfTtcclxuICAgIHNlY3VyaXR5X3NldHRpbmdzOiB7XHJcbiAgICAgICAgcmVxdWlyZV9lbWFpbF92ZXJpZmljYXRpb246IGJvb2xlYW47XHJcbiAgICAgICAgYWxsb3dfc29jaWFsX2xvZ2luOiBib29sZWFuO1xyXG4gICAgICAgIHNlc3Npb25fdGltZW91dF9taW51dGVzOiBudW1iZXI7XHJcbiAgICB9O1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWRtaW5TZXR0aW5ncygpOiBQcm9taXNlPEFkbWluU2V0dGluZ3M+IHtcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvYWRtaW4vc2V0dGluZ3MnKTtcclxuICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgICBjb25zdCBlcnJvciA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3IubWVzc2FnZSB8fCAn7ISk7KCV7J2EIOu2iOufrOyYpOuKlOuNsCDsi6TtjKjtlojsirXri4jri6QuJyk7XHJcbiAgICB9XHJcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICByZXR1cm4gcmVzdWx0LmRhdGEgfHwgcmVzdWx0O1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdXBkYXRlQWRtaW5TZXR0aW5ncyhzZXR0aW5nczogQWRtaW5TZXR0aW5ncyk6IFByb21pc2U8QWRtaW5TZXR0aW5ncz4ge1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS9hZG1pbi9zZXR0aW5ncycsIHtcclxuICAgICAgICBtZXRob2Q6ICdQVVQnLFxyXG4gICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICAgICAgICB9LFxyXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHNldHRpbmdzKSxcclxuICAgIH0pO1xyXG5cclxuICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgICBjb25zdCBlcnJvciA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3IubWVzc2FnZSB8fCAn7ISk7KCVIOyXheuNsOydtO2KuOyXkCDsi6TtjKjtlojsirXri4jri6QuJyk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcclxufSAiXSwibmFtZXMiOlsiQVBJX1VSTCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19BUElfVVJMIiwiZ2V0QWRtaW5TZXR0aW5ncyIsInJlc3BvbnNlIiwiZmV0Y2giLCJvayIsImVycm9yIiwianNvbiIsIkVycm9yIiwibWVzc2FnZSIsInJlc3VsdCIsImRhdGEiLCJ1cGRhdGVBZG1pblNldHRpbmdzIiwic2V0dGluZ3MiLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api/adminSettings.ts\n"));

/***/ })

});